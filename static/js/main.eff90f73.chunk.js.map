{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Success.js","components/Confirm.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","values","nextStep","handleChange","useState","error","setError","className","placeholder","type","name","value","firstName","onChange","e","lastName","email","onClick","test","FormPersonalDetails","prevStep","occupation","city","bio","Success","Component","Confirm","UserForm","state","step","setState","target","this","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.eff90f73.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst FormUserDetails = ({values, nextStep, handleChange}) => {\r\n        const [error, setError] = useState(\"\")\r\n        \r\n        const validateForm = () => {\r\n            if(values.firstName ===\"\" && values.lastName ===\"\" && values.email ===\"\"){\r\n                setError(\"Enter Details\") \r\n                return; \r\n            }\r\n            else if(values.firstName ===\"\"){\r\n                setError(\"Enter First Name\") \r\n                return; \r\n            }\r\n            else if(values.lastName ===\"\"){\r\n                setError(\"Enter Last Name\") \r\n                return; \r\n            }\r\n            else if(values.email === \"\"){\r\n                setError(\"Enter email\") \r\n                return; \r\n            }\r\n            else if(/\\S+@\\S+\\.\\S+/.test(values.email) === false){\r\n                setError(\"Enter valid email\") \r\n                return; \r\n            }\r\n            else if(/^[A-Za-z\\s]+$/.test(values.firstName) === false){\r\n                setError(\"Enter valid Name\") \r\n                return; \r\n            }\r\n            else{\r\n                nextStep();\r\n            }\r\n        }\r\n\r\n       \r\n        return (\r\n            <div>\r\n            <h3>Enter Basic details</h3>\r\n            <div className=\"form-wrapper\">\r\n                {\r\n                   (error === \"\") ? \"\" : <div className=\"error\"> {error}</div>\r\n                }\r\n                <div className=\"form-group\">\r\n                    <label>First Name</label>\r\n                    <input className=\"form-control\" placeholder=\"Enter First Name\" type=\"text\" name=\"firstName\"  value={values.firstName} onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Last Name</label>\r\n                    <input className=\"form-control\" placeholder=\"Enter Last Name\" type=\"text\" name=\"lastName\" value={values.lastName} onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input className=\"form-control\" placeholder=\"Enter Email\" type=\"text\" name=\"email\"  value={values.email} onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={validateForm}>Next</button>\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\nexport default FormUserDetails","import React, {useState} from 'react'\r\n\r\nconst FormPersonalDetails = ({values, handleChange, prevStep, nextStep}) => {\r\n    const [error, setError] = useState(\"\");\r\n\r\n        const validateForm = () => {\r\n            if(values.occupation ===\"\" && values.city ===\"\" && values.bio ===\"\"){\r\n                setError(\"Enter Details\") \r\n                return; \r\n            }\r\n            else if(values.occupation ===\"\"){\r\n                setError(\"Enter Occupation\") \r\n                return; \r\n            }\r\n            else if(values.city ===\"\"){\r\n                setError(\"Enter City\") \r\n                return; \r\n            }\r\n            else if(values.bio === \"\"){\r\n                setError(\"Enter Bio\") \r\n                return; \r\n            }\r\n            else{\r\n                nextStep();\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n            <h3>Enter More details</h3>\r\n            <div className=\"form-wrapper\">\r\n                {\r\n                   (error === \"\") ? \"\" : <div className=\"error\"> {error}</div>\r\n                }\r\n\r\n                 <div className=\"form-group\">\r\n                    <label>Occupation</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"occupation\"  value={values.occupation} onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>City</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"city\"  value={values.city} onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Bio</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"bio\"  value={values.bio} onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n\r\n                <button className=\"btn btn-secondary\" onClick={()=>prevStep()}>Prev</button>\r\n                <button className=\"btn\" onClick={validateForm}>Next</button>\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\nexport default FormPersonalDetails","import React, { Component } from 'react'\r\n\r\nclass Success extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Success</h3>\r\n            <div className=\"form-wrapper\">\r\n\r\n                <h5>Thank you !!!</h5>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Success","import React from 'react'\r\n\r\nconst Confirm = ({values, nextStep, prevStep}) => {\r\n    \r\n        return (\r\n            <div>\r\n            <h3>Confirm</h3>\r\n            <div className=\"form-wrapper\">\r\n                <ul>\r\n                    <li>First Name: {values.firstName}</li> \r\n                    <li>Last Name: {values.lastName}</li>\r\n                    <li>Email: {values.email}</li>\r\n                    <li>Occupation: {values.occupation}</li>\r\n                    <li>City: {values.city}</li>\r\n                    <li>Bio: {values.bio}</li>\r\n                </ul>\r\n                <button className=\"btn btn-secondary\" onClick={()=>prevStep()}>Prev</button>\r\n                <button className=\"btn\" onClick={()=>nextStep()}>Next</button>\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\nexport default Confirm","import React, { Component } from 'react'\r\nimport FormUserDetails from './FormUserDetails';\r\nimport FormPersonalDetails from './FormPersonalDetails';\r\nimport Success from './Success';\r\nimport Confirm from './Confirm';\r\n\r\nclass UserForm extends Component {\r\n    state = {\r\n        step:1,\r\n        firstName: '',\r\n        lastName:'',\r\n        email:'',\r\n        occupation:'',\r\n        city:'',\r\n        bio:''\r\n    }\r\n    nextStep =()=>{\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step+1\r\n        })\r\n    }\r\n    prevStep =()=>{\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step-1\r\n        })\r\n    }\r\n    handleChange =  e => {\r\n        this.setState({\r\n           [e.target.name]: e.target.value \r\n        })\r\n    }\r\n    render() {\r\n        const { step } = this.state;\r\n        const { firstName, lastName, email, occupation, city, bio } = this.state;\r\n        const values =  { firstName, lastName, email, occupation, city, bio } \r\n        \r\n        switch(step){\r\n            case 1:\r\n                return(<FormUserDetails values={values} handleChange={ this.handleChange } nextStep={this.nextStep} />)\r\n            case 2:\r\n                return(<FormPersonalDetails values={values}  handleChange={ this.handleChange } prevStep={this.prevStep} nextStep={this.nextStep} />)\r\n            case 3:\r\n                return(<Confirm values={values} prevStep={this.prevStep} nextStep={this.nextStep} /> )\r\n            case 4:\r\n                return(<Success />)\r\n            default:\r\n                return(<div></div>)\r\n        }\r\n      \r\n    }\r\n}\r\nexport default UserForm ","import React from 'react';\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}